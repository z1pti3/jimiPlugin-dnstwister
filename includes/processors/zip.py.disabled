import os
from zipfile import ZipFile

from plugins.datasee.includes import processor, spider

class _zip(processor.processor):
    supportedFileTypes = ["zip"]

    def process(self):
        with ZipFile(self.dsFile.path,"r") as zippedFiles:
            zippedFiles.extractall("temp")
            for zippedFile in zippedFiles.namelist():
                spiderFile = spider.dsFile("temp",zippedFile)
                if spiderFile.size < 200485760:
                    if spiderFile.extension in processor.fileTypeClassMap:
                        result = processor.fileTypeClassMap[spiderFile.extension].processHandler(spiderFile)
                    elif "*" in processor.fileTypeClassMap:
                        result = processor.fileTypeClassMap["*"].processHandler(spiderFile)
                    yield processor.processItem(-1,result)
                else:
                    print("File too big - {0}-{1}".format(spiderFile.path,result))
                    yield processor.processItem(-5,result)       
        for f in os.listdir("temp"):
	        os.remove(os.path.join("temp", f))
            ## include directories 
        return []
